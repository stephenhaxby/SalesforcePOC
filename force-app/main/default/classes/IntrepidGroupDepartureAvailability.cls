//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class IntrepidGroupDepartureAvailability {

	public class Availability {
		public Integer availableSpots {get;set;} 
		public Integer availableSpotsFreeSell {get;set;} 

		public Availability(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'availableSpots') {
							availableSpots = parser.getIntegerValue();
						} else if (text == 'availableSpotsFreeSell') {
							availableSpotsFreeSell = parser.getIntegerValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Availability consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Product {
		public String href {get;set;} 

		public Product(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'href') {
							href = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Product consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public List<Departures> departures {get;set;} 

	public IntrepidGroupDepartureAvailability(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'departures') {
						departures = arrayOfDepartures(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'IntrepidGroupDepartureAvailability consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Departures {
		public Integer id {get;set;} 
		public String href {get;set;} 
		public Product product {get;set;} 
		public String name {get;set;} 
		public String code {get;set;} 
		public String startDate {get;set;} 
		public String endDate {get;set;} 
		public Integer numberOfDays {get;set;} 
		public String startLocation {get;set;} 
		public String endLocation {get;set;} 
		public Boolean departureGuaranteed {get;set;} 
		public String status {get;set;} 
		public Availability availability {get;set;} 
		public Product prices {get;set;} 
		public Boolean onRequestOnly {get;set;} 
		public Integer onRequestCapacity {get;set;} 
		public Boolean freeSell {get;set;} 
		public Boolean lateRequest {get;set;} 
		public Integer bookingClosed {get;set;} 
		public Boolean onRequest {get;set;} 
		public Integer onRequestDays {get;set;} 

		public Departures(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'id') {
							id = parser.getIntegerValue();
						} else if (text == 'href') {
							href = parser.getText();
						} else if (text == 'product') {
							product = new Product(parser);
						} else if (text == 'name') {
							name = parser.getText();
						} else if (text == 'code') {
							code = parser.getText();
						} else if (text == 'startDate') {
							startDate = parser.getText();
						} else if (text == 'endDate') {
							endDate = parser.getText();
						} else if (text == 'numberOfDays') {
							numberOfDays = parser.getIntegerValue();
						} else if (text == 'startLocation') {
							startLocation = parser.getText();
						} else if (text == 'endLocation') {
							endLocation = parser.getText();
						} else if (text == 'departureGuaranteed') {
							departureGuaranteed = parser.getBooleanValue();
						} else if (text == 'status') {
							status = parser.getText();
						} else if (text == 'availability') {
							availability = new Availability(parser);
						} else if (text == 'prices') {
							prices = new Product(parser);
						} else if (text == 'onRequestOnly') {
							onRequestOnly = parser.getBooleanValue();
						} else if (text == 'onRequestCapacity') {
							onRequestCapacity = parser.getIntegerValue();
						} else if (text == 'freeSell') {
							freeSell = parser.getBooleanValue();
						} else if (text == 'lateRequest') {
							lateRequest = parser.getBooleanValue();
						} else if (text == 'bookingClosed') {
							bookingClosed = parser.getIntegerValue();
						} else if (text == 'onRequest') {
							onRequest = parser.getBooleanValue();
						} else if (text == 'onRequestDays') {
							onRequestDays = parser.getIntegerValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Departures consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static IntrepidGroupDepartureAvailability parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new IntrepidGroupDepartureAvailability(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	



    private static List<Departures> arrayOfDepartures(System.JSONParser p) {
        List<Departures> res = new List<Departures>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Departures(p));
        }
        return res;
    }






}